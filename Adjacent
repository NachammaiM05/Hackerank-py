12/6
TASK:
Given a circular array nums, find the maximum absolute difference between adjacent elements.
Note: In a circular array, the first and last elements are adjacent.
Example 1:
Input: nums = [1,2,4]
Output: 3-can you give the idea for solve this task at first and give the solution for it
Explanation:
Because nums is circular, nums [0] and nums [2] are adjacent. They have the maximum absolute difference of |4 - 1| = 3.
Example 2:
Input: nums = [-5,-10,-5]
Output: 5
Explanation:
The adjacent elements nums [0] and nums [1] have the maximum absolute difference of |-5 - (-10) | = 5.
Constraints:
. 2 < nums. length <= 100
. -100 <= nums [i] <= 100
****************************************************
CODE
****************************************************
class Solution:
    def maxAdjacentDistance(self, nums: List[int]) -> int:
        n = len(nums)
        max_diff = 0

        for i in range(n):
            next_i = (i + 1) % n
            diff = abs(nums[i] - nums[next_i]) 
            max_diff = max(max_diff, diff)

        return max_diff
        

sol = Solution()
print(sol.maxAdjacentDistance([1, 2, 4]))       
print(sol.maxAdjacentDistance([-5, -10, -5]))  
*****************************************************************
OUTPUT
****************************************************************

Case 1

Input
nums =
[1,2,4]
Stdout
3
5
Output
3
Expected
3

Case 2
Input
nums =
[-5,-10,-5]
Output
5
Expected
5
